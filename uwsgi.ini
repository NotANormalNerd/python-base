[uwsgi]
# Set sane defaults following this blogpost:
# https://www.techatbloomberg.com/blog/configuring-uwsgi-production-deployment/
strict = 1

plugins = python3,spooler,cache,logfile,escape_json_plugin.so

master = 1
workers = 2

enable-threads = 1
vacuum = 1
single-interpreter = 1
die-on-term = 1
need-app = 1

## resource usage limitation
max-requests = 10000
max-worker-lifetime = 86400
reload-on-rss = 512
worker-reload-mercy = 60

## Ignore Errors when client closes the connection prematurely
ignore-sigpipe = 1
ignore-write-errors = 1
disable-write-exception = 1

# logging
# https://medium.com/velebit-ai-tech-blog/json-logging-in-uwsgi-e9aa3a91b79d

## application logs, already starting with json {...
logger = applogger stdio
log-route = applogger {
log-encoder = format:applogger ${msg}

## uwsgi server logs
logger = default stdio
log-route = default ^((?!\{).)*$
log-encoder = json:default {"time":"${micros}", "source":"uwsgi", "message":"${msg}"}
log-encoder = nl

## uwsgi request logs
logger-req = stdio
log-format = "address":"%(addr)", "host":"%(json_host)", "method":"%(method)", "uri":"%(json_uri)", "protocol":"%(proto)", "resp_size":%(size), "req_body_size":%(cl), "resp_status":%(status), "resp_time":%(secs)
log-req-encoder = format {"time":"${micros}", "source":"uwsgi-req", ${msg}}
log-req-encoder = nl